{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arije\\\\OneDrive\\\\Desktop\\\\MinorProject\\\\track-donations\\\\src\\\\components\\\\createCampaign\\\\GetCampaign.js\",\n    _s = $RefreshSig$();\n\n// REFERENCING FIREBASE DATABASE\n// import React, { useEffect } from \"react\";\n// import useHttp from \"./use-http\";\n// import { getAllCampaigns } from \"./api\";\n// // import SingleCampaign from \"./SingleCampaign\";\n// import SingleCard from \"./SingleCard\";\n// function GetCampaign() {\n//   const email = JSON.parse(localStorage.getItem(\"userEmail\"));\n//   const {\n//     sendRequest,\n//     status,\n//     data: loadedCampaigns,\n//   } = useHttp(getAllCampaigns, true);\n//   useEffect(() => {\n//     sendRequest();\n//   }, [sendRequest]);\n//   if (status === \"pending\") {\n//     return <div></div>;\n//   }\n//   const filteredCampaign = loadedCampaigns.filter((element) => {\n//     return element.email === email;\n//   });\n//   return (\n//     <div className=\"filter\">\n//       <SingleCard campaign={filteredCampaign} />\n//     </div>\n//   );\n// }\n// export default GetCampaign;\n// BLOCKCHAIN DATABASE\nimport { useEffect, useState } from \"react\";\nimport { detailsABI, detailsAddress } from \"../detailsContract/constants\";\nimport { ethers } from \"ethers\";\nimport SingleCard from \"./SingleCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet allCampaigns;\nlet filtered;\nconst {\n  ethereum\n} = window;\n\nconst createEthereumContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n  const detailsContract = new ethers.Contract(detailsAddress, detailsABI, signer);\n  return detailsContract;\n};\n\nconst GetCampaign = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [filteredCampaign, setFilteredCampaign] = useState({});\n  const email = JSON.parse(localStorage.getItem(\"userEmail\"));\n  useEffect(() => {\n    (async () => {\n      const detailsContract = createEthereumContract();\n      allCampaigns = await detailsContract.getCampaigns();\n      setIsLoading(false);\n    })();\n  }); // if (!isLoading && typeof allCampaigns !== \"undefined\") {\n  //   console.log(typeof allCampaigns);\n  //   filteredCampaign = allCampaigns.filter((element) => {\n  //     return element.email === email;\n  //   });\n  // }\n\n  filtered = allCampaigns.filter(element => {\n    return element.email === email;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [setFilteredCampaign(filtered), !isLoading && typeof filteredCampaign !== \"undefined\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(SingleCard, {\n        campaign: filteredCampaign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GetCampaign, \"j01GqJQuMW4w1QUJePUOHfZvrPY=\");\n\n_c = GetCampaign;\nexport default GetCampaign;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCampaign\");","map":{"version":3,"names":["useEffect","useState","detailsABI","detailsAddress","ethers","SingleCard","allCampaigns","filtered","ethereum","window","createEthereumContract","provider","providers","Web3Provider","signer","getSigner","detailsContract","Contract","GetCampaign","isLoading","setIsLoading","filteredCampaign","setFilteredCampaign","email","JSON","parse","localStorage","getItem","getCampaigns","filter","element"],"sources":["C:/Users/arije/OneDrive/Desktop/MinorProject/track-donations/src/components/createCampaign/GetCampaign.js"],"sourcesContent":["// REFERENCING FIREBASE DATABASE\r\n\r\n// import React, { useEffect } from \"react\";\r\n// import useHttp from \"./use-http\";\r\n// import { getAllCampaigns } from \"./api\";\r\n// // import SingleCampaign from \"./SingleCampaign\";\r\n// import SingleCard from \"./SingleCard\";\r\n// function GetCampaign() {\r\n//   const email = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n//   const {\r\n//     sendRequest,\r\n//     status,\r\n//     data: loadedCampaigns,\r\n//   } = useHttp(getAllCampaigns, true);\r\n//   useEffect(() => {\r\n//     sendRequest();\r\n//   }, [sendRequest]);\r\n\r\n//   if (status === \"pending\") {\r\n//     return <div></div>;\r\n//   }\r\n//   const filteredCampaign = loadedCampaigns.filter((element) => {\r\n//     return element.email === email;\r\n//   });\r\n//   return (\r\n//     <div className=\"filter\">\r\n//       <SingleCard campaign={filteredCampaign} />\r\n//     </div>\r\n//   );\r\n// }\r\n// export default GetCampaign;\r\n\r\n// BLOCKCHAIN DATABASE\r\nimport { useEffect, useState } from \"react\";\r\nimport { detailsABI, detailsAddress } from \"../detailsContract/constants\";\r\nimport { ethers } from \"ethers\";\r\nimport SingleCard from \"./SingleCard\";\r\nlet allCampaigns;\r\nlet filtered;\r\nconst { ethereum } = window;\r\nconst createEthereumContract = () => {\r\n  const provider = new ethers.providers.Web3Provider(ethereum);\r\n  const signer = provider.getSigner();\r\n  const detailsContract = new ethers.Contract(\r\n    detailsAddress,\r\n    detailsABI,\r\n    signer\r\n  );\r\n  return detailsContract;\r\n};\r\nconst GetCampaign = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [filteredCampaign, setFilteredCampaign] = useState({});\r\n  const email = JSON.parse(localStorage.getItem(\"userEmail\"));\r\n  useEffect(() => {\r\n    (async () => {\r\n      const detailsContract = createEthereumContract();\r\n      allCampaigns = await detailsContract.getCampaigns();\r\n      setIsLoading(false);\r\n    })();\r\n  });\r\n\r\n  // if (!isLoading && typeof allCampaigns !== \"undefined\") {\r\n  //   console.log(typeof allCampaigns);\r\n  //   filteredCampaign = allCampaigns.filter((element) => {\r\n  //     return element.email === email;\r\n  //   });\r\n  // }\r\n  filtered = allCampaigns.filter((element) => {\r\n    return element.email === email;\r\n  });\r\n  return (\r\n    <>\r\n      {setFilteredCampaign(filtered)}\r\n      {!isLoading && typeof filteredCampaign !== \"undefined\" && (\r\n        <div className=\"filter\">\r\n          <SingleCard campaign={filteredCampaign} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default GetCampaign;\r\n"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,8BAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AACA,IAAIC,YAAJ;AACA,IAAIC,QAAJ;AACA,MAAM;EAAEC;AAAF,IAAeC,MAArB;;AACA,MAAMC,sBAAsB,GAAG,MAAM;EACnC,MAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,SAAP,CAAiBC,YAArB,CAAkCL,QAAlC,CAAjB;EACA,MAAMM,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;EACA,MAAMC,eAAe,GAAG,IAAIZ,MAAM,CAACa,QAAX,CACtBd,cADsB,EAEtBD,UAFsB,EAGtBY,MAHsB,CAAxB;EAKA,OAAOE,eAAP;AACD,CATD;;AAUA,MAAME,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAMsB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAd;EACA3B,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMgB,eAAe,GAAGN,sBAAsB,EAA9C;MACAJ,YAAY,GAAG,MAAMU,eAAe,CAACY,YAAhB,EAArB;MACAR,YAAY,CAAC,KAAD,CAAZ;IACD,CAJD;EAKD,CANQ,CAAT,CAJwB,CAYxB;EACA;EACA;EACA;EACA;EACA;;EACAb,QAAQ,GAAGD,YAAY,CAACuB,MAAb,CAAqBC,OAAD,IAAa;IAC1C,OAAOA,OAAO,CAACP,KAAR,KAAkBA,KAAzB;EACD,CAFU,CAAX;EAGA,oBACE;IAAA,WACGD,mBAAmB,CAACf,QAAD,CADtB,EAEG,CAACY,SAAD,IAAc,OAAOE,gBAAP,KAA4B,WAA1C,iBACC;MAAK,SAAS,EAAC,QAAf;MAAA,uBACE,QAAC,UAAD;QAAY,QAAQ,EAAEA;MAAtB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA,gBADF;AAUD,CA/BD;;GAAMH,W;;KAAAA,W;AAgCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}