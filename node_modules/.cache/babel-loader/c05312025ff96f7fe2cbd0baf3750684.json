{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arije\\\\OneDrive\\\\Desktop\\\\decoy\\\\src\\\\components\\\\createCampaign\\\\GetCampaign.js\",\n    _s = $RefreshSig$();\n\n// BLOCKCHAIN DATABASE\nimport { useEffect, useState } from \"react\";\nimport { escrowABI, escrowAddress } from \"../allInOneContract/constants\";\nimport { ethers } from \"ethers\";\nimport Temporary from \"./Temporary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GetCampaign = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedCampaigns, setLoadedCampaigns] = useState([{\n    email: \"\",\n    minimum: \"\",\n    ngo: \"\",\n    objective: \"\",\n    phone: \"\",\n    target: \"\",\n    wallet: \"\"\n  }]);\n  const {\n    ethereum\n  } = window;\n  let count = 0;\n\n  const start = async () => {\n    const createEscrowContract = () => {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const escrowContract = new ethers.Contract(escrowAddress, escrowABI, signer);\n      return escrowContract;\n    };\n\n    const escrowContract = createEscrowContract();\n    const allCampaigns = await escrowContract.getCampaigns();\n    count++;\n    console.log(allCampaigns);\n    setLoadedCampaigns(allCampaigns);\n    setIsLoading(false);\n    console.log(loadedCampaigns);\n  };\n\n  useEffect(() => {\n    start();\n  }, []); // start();\n  // if (count !== 0) {\n  //   setLoadedCampaigns(allCampaigns);\n  //   console.log(loadedCampaigns);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading && /*#__PURE__*/_jsxDEV(Temporary, {\n      campaigns: loadedCampaigns.campaigns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }, this)\n  }, void 0, false);\n};\n\n_s(GetCampaign, \"UT6oU/M+qG2YfIH8KrINJmhjtE0=\");\n\n_c = GetCampaign;\nexport default GetCampaign;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCampaign\");","map":{"version":3,"names":["useEffect","useState","escrowABI","escrowAddress","ethers","Temporary","GetCampaign","isLoading","setIsLoading","loadedCampaigns","setLoadedCampaigns","email","minimum","ngo","objective","phone","target","wallet","ethereum","window","count","start","createEscrowContract","provider","providers","Web3Provider","signer","getSigner","escrowContract","Contract","allCampaigns","getCampaigns","console","log","campaigns"],"sources":["C:/Users/arije/OneDrive/Desktop/decoy/src/components/createCampaign/GetCampaign.js"],"sourcesContent":["// BLOCKCHAIN DATABASE\r\nimport { useEffect, useState } from \"react\";\r\nimport { escrowABI, escrowAddress } from \"../allInOneContract/constants\";\r\nimport { ethers } from \"ethers\";\r\nimport Temporary from \"./Temporary\";\r\nconst GetCampaign = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadedCampaigns, setLoadedCampaigns] = useState([\r\n    {\r\n      email: \"\",\r\n      minimum: \"\",\r\n      ngo: \"\",\r\n      objective: \"\",\r\n      phone: \"\",\r\n      target: \"\",\r\n      wallet: \"\",\r\n    },\r\n  ]);\r\n  const { ethereum } = window;\r\n  let count = 0;\r\n  const start = async () => {\r\n    const createEscrowContract = () => {\r\n      const provider = new ethers.providers.Web3Provider(ethereum);\r\n      const signer = provider.getSigner();\r\n      const escrowContract = new ethers.Contract(\r\n        escrowAddress,\r\n        escrowABI,\r\n        signer\r\n      );\r\n      return escrowContract;\r\n    };\r\n    const escrowContract = createEscrowContract();\r\n    const allCampaigns = await escrowContract.getCampaigns();\r\n    count++;\r\n    console.log(allCampaigns);\r\n    setLoadedCampaigns(allCampaigns);\r\n\r\n    setIsLoading(false);\r\n    console.log(loadedCampaigns);\r\n  };\r\n  useEffect(() => {\r\n    start();\r\n  }, []);\r\n  // start();\r\n  // if (count !== 0) {\r\n  //   setLoadedCampaigns(allCampaigns);\r\n\r\n  //   console.log(loadedCampaigns);\r\n  // }\r\n  return (\r\n    <>{!isLoading && <Temporary campaigns={loadedCampaigns.campaigns} />}</>\r\n  );\r\n};\r\nexport default GetCampaign;\r\n"],"mappings":";;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,+BAAzC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,CACrD;IACEU,KAAK,EAAE,EADT;IAEEC,OAAO,EAAE,EAFX;IAGEC,GAAG,EAAE,EAHP;IAIEC,SAAS,EAAE,EAJb;IAKEC,KAAK,EAAE,EALT;IAMEC,MAAM,EAAE,EANV;IAOEC,MAAM,EAAE;EAPV,CADqD,CAAD,CAAtD;EAWA,MAAM;IAAEC;EAAF,IAAeC,MAArB;EACA,IAAIC,KAAK,GAAG,CAAZ;;EACA,MAAMC,KAAK,GAAG,YAAY;IACxB,MAAMC,oBAAoB,GAAG,MAAM;MACjC,MAAMC,QAAQ,GAAG,IAAInB,MAAM,CAACoB,SAAP,CAAiBC,YAArB,CAAkCP,QAAlC,CAAjB;MACA,MAAMQ,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;MACA,MAAMC,cAAc,GAAG,IAAIxB,MAAM,CAACyB,QAAX,CACrB1B,aADqB,EAErBD,SAFqB,EAGrBwB,MAHqB,CAAvB;MAKA,OAAOE,cAAP;IACD,CATD;;IAUA,MAAMA,cAAc,GAAGN,oBAAoB,EAA3C;IACA,MAAMQ,YAAY,GAAG,MAAMF,cAAc,CAACG,YAAf,EAA3B;IACAX,KAAK;IACLY,OAAO,CAACC,GAAR,CAAYH,YAAZ;IACApB,kBAAkB,CAACoB,YAAD,CAAlB;IAEAtB,YAAY,CAAC,KAAD,CAAZ;IACAwB,OAAO,CAACC,GAAR,CAAYxB,eAAZ;EACD,CAnBD;;EAoBAT,SAAS,CAAC,MAAM;IACdqB,KAAK;EACN,CAFQ,EAEN,EAFM,CAAT,CAnCwB,CAsCxB;EACA;EACA;EAEA;EACA;;EACA,oBACE;IAAA,UAAG,CAACd,SAAD,iBAAc,QAAC,SAAD;MAAW,SAAS,EAAEE,eAAe,CAACyB;IAAtC;MAAA;MAAA;MAAA;IAAA;EAAjB,iBADF;AAGD,CA/CD;;GAAM5B,W;;KAAAA,W;AAgDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}